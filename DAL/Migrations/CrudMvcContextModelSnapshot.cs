// <auto-generated />
using System;
using DAL.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CrudMvcContext))]
    partial class CrudMvcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Db.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("text")
                        .HasColumnName("course_description");

                    b.Property<string>("CourseName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("course_name");

                    b.Property<int?>("CreditHours")
                        .HasColumnType("int")
                        .HasColumnName("credit_hours");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__8F1EF7AE965A2685");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("DAL.Db.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateOnly?>("EnrollmentDate")
                        .HasColumnType("date")
                        .HasColumnName("enrollment_date");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__Enrollme__6D24AA7A3B855BFE");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("DAL.Db.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("grade_id");

                    b.Property<int?>("EnrollmentId")
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id");

                    b.Property<string>("Grade1")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("grade");

                    b.HasKey("GradeId")
                        .HasName("PK__Grades__3A8F732C45E536F8");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DAL.Db.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("StudentName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("student_name");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__2A33069AA14E42D7");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DAL.Db.Enrollment", b =>
                {
                    b.HasOne("DAL.Db.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Enrollmen__cours__3C69FB99");

                    b.HasOne("DAL.Db.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Enrollmen__stude__3B75D760");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DAL.Db.Grade", b =>
                {
                    b.HasOne("DAL.Db.Enrollment", "Enrollment")
                        .WithMany("Grades")
                        .HasForeignKey("EnrollmentId")
                        .HasConstraintName("FK__Grades__enrollme__3F466844");

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("DAL.Db.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DAL.Db.Enrollment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("DAL.Db.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
